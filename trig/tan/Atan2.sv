// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\hdlcoder_atan2_control\Atan2.sv
// Created: 2025-08-14 17:01:00
// 
// Generated by MATLAB 25.1, HDL Coder 25.1, and Simulink 25.1
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// thetaOut                      ce_out        1
// validOut                      ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Atan2
// Source Path: hdlcoder_atan2_control/Atan2
// Hierarchy Level: 0
// Model version: 12.0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Atan2
          (  input logic clk,
             input logic reset,
             input logic clk_enable,
             input logic signed [17:0] y_dataIn  /* sfix18_En17 */,
             input logic signed [17:0] x_dataIn  /* sfix18_En17 */,
             input logic validIn,
             output logic ce_out,
             output logic signed [17:0] thetaOut  /* sfix18_En15 */,
             output logic validOut);


  logic enb;
  logic [13:0] hdl_Delay_reg;  /* ufix1 [14] */
  logic y;
  logic switch_compare_1;
  logic signed [17:0] y_1;  /* sfix18_En15 */
  logic signed [17:0] Switch_out1;  /* sfix18_En15 */
  logic signed [17:0] Delay_out1;  /* sfix18_En15 */


  assign enb = clk_enable;

  always_ff @(posedge clk)
    begin : hdl_Delay_process
      if (reset == 1'b1) begin
        hdl_Delay_reg <= '{14{1'b0}};
      end
      else begin
        if (enb) begin
          hdl_Delay_reg[0] <= validIn;
          hdl_Delay_reg[32'sd13:32'sd1] <= hdl_Delay_reg[32'sd12:32'sd0];
        end
      end
    end

  assign y = hdl_Delay_reg[13];

  assign switch_compare_1 = y > 1'b0;

  Atan2_block u_Atan2 (.clk(clk),
                       .reset(reset),
                       .enb(clk_enable),
                       .y_in(y_dataIn),  /* sfix18_En17 */
                       .x_in(x_dataIn),  /* sfix18_En17 */
                       .angle(y_1)  /* sfix18_En15 */
                       );

  always_ff @(posedge clk)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb) begin
          Delay_out1 <= Switch_out1;
        end
      end
    end

  assign Switch_out1 = (switch_compare_1 == 1'b0 ? Delay_out1 :
              y_1);

  assign thetaOut = Switch_out1;

  assign validOut = y;

  assign ce_out = clk_enable;

endmodule  // Atan2

