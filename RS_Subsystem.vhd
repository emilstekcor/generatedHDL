-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\kyle\Desktop\Encoder_decoder\commrshdl\RS_Subsystem.vhd
-- Created: 2024-04-06 17:18:32
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- dataOut                       ce_out        1
-- startOut                      ce_out        1
-- endOut                        ce_out        1
-- validOut                      ce_out        1
-- errOut                        ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: RS_Subsystem
-- Source Path: commrshdl/RS Subsystem
-- Hierarchy Level: 0
-- Model version: 9.4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY RS_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        dataIn                            :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        startIn                           :   IN    std_logic;
        endIn                             :   IN    std_logic;
        validIn                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        dataOut                           :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        startOut                          :   OUT   std_logic;
        endOut                            :   OUT   std_logic;
        validOut                          :   OUT   std_logic;
        errOut                            :   OUT   std_logic
        );
END RS_Subsystem;


ARCHITECTURE rtl OF RS_Subsystem IS

  -- Component Declarations
  COMPONENT Integer_Input_RS_Encoder_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_in :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Integer_Input_RS_Encoder_HDL_Optimized_start :   IN    std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_end :   IN    std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_datavalid :   IN    std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_out :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          Integer_Input_RS_Encoder_HDL_Optimized_startout :   OUT   std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_endout :   OUT   std_logic;
          Integer_Input_RS_Encoder_HDL_Optimized_datavalidout :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT ErrorGen
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          DataIn                          :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          StartIn                         :   IN    std_logic;
          EndIn                           :   IN    std_logic;
          ValidIn                         :   IN    std_logic;
          DataOut                         :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          StartOut                        :   OUT   std_logic;
          EndOut                          :   OUT   std_logic;
          ValidOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Integer_Output_RS_Decoder_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_in :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Integer_Output_RS_Decoder_HDL_Optimized_start :   IN    std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_end :   IN    std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_datavalid :   IN    std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_out :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          Integer_Output_RS_Decoder_HDL_Optimized_startout :   OUT   std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_endout :   OUT   std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_datavalidout :   OUT   std_logic;
          Integer_Output_RS_Decoder_HDL_Optimized_errout :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Integer_Input_RS_Encoder_HDL_Optimized
    USE ENTITY work.Integer_Input_RS_Encoder_HDL_Optimized(rtl);

  FOR ALL : ErrorGen
    USE ENTITY work.ErrorGen(rtl);

  FOR ALL : Integer_Output_RS_Decoder_HDL_Optimized
    USE ENTITY work.Integer_Output_RS_Decoder_HDL_Optimized(rtl);

  -- Signals
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_out1 : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_out2 : std_logic;
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_out3 : std_logic;
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_out4 : std_logic;
  SIGNAL ErrorGen_out1                    : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL ErrorGen_out2                    : std_logic;
  SIGNAL ErrorGen_out3                    : std_logic;
  SIGNAL ErrorGen_out4                    : std_logic;
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out1 : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out2 : std_logic;
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out3 : std_logic;
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out4 : std_logic;
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out5 : std_logic;

BEGIN
  u_Integer_Input_RS_Encoder_HDL_Optimized : Integer_Input_RS_Encoder_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              Integer_Input_RS_Encoder_HDL_Optimized_in => dataIn,  -- uint8
              Integer_Input_RS_Encoder_HDL_Optimized_start => startIn,
              Integer_Input_RS_Encoder_HDL_Optimized_end => endIn,
              Integer_Input_RS_Encoder_HDL_Optimized_datavalid => validIn,
              Integer_Input_RS_Encoder_HDL_Optimized_out => Integer_Input_RS_Encoder_HDL_Optimized_out1,  -- uint8
              Integer_Input_RS_Encoder_HDL_Optimized_startout => Integer_Input_RS_Encoder_HDL_Optimized_out2,
              Integer_Input_RS_Encoder_HDL_Optimized_endout => Integer_Input_RS_Encoder_HDL_Optimized_out3,
              Integer_Input_RS_Encoder_HDL_Optimized_datavalidout => Integer_Input_RS_Encoder_HDL_Optimized_out4
              );

  u_ErrorGen : ErrorGen
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              DataIn => Integer_Input_RS_Encoder_HDL_Optimized_out1,  -- uint8
              StartIn => Integer_Input_RS_Encoder_HDL_Optimized_out2,
              EndIn => Integer_Input_RS_Encoder_HDL_Optimized_out3,
              ValidIn => Integer_Input_RS_Encoder_HDL_Optimized_out4,
              DataOut => ErrorGen_out1,  -- uint8
              StartOut => ErrorGen_out2,
              EndOut => ErrorGen_out3,
              ValidOut => ErrorGen_out4
              );

  u_Integer_Output_RS_Decoder_HDL_Optimized : Integer_Output_RS_Decoder_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              Integer_Output_RS_Decoder_HDL_Optimized_in => ErrorGen_out1,  -- uint8
              Integer_Output_RS_Decoder_HDL_Optimized_start => ErrorGen_out2,
              Integer_Output_RS_Decoder_HDL_Optimized_end => ErrorGen_out3,
              Integer_Output_RS_Decoder_HDL_Optimized_datavalid => ErrorGen_out4,
              Integer_Output_RS_Decoder_HDL_Optimized_out => Integer_Output_RS_Decoder_HDL_Optimized_out1,  -- uint8
              Integer_Output_RS_Decoder_HDL_Optimized_startout => Integer_Output_RS_Decoder_HDL_Optimized_out2,
              Integer_Output_RS_Decoder_HDL_Optimized_endout => Integer_Output_RS_Decoder_HDL_Optimized_out3,
              Integer_Output_RS_Decoder_HDL_Optimized_datavalidout => Integer_Output_RS_Decoder_HDL_Optimized_out4,
              Integer_Output_RS_Decoder_HDL_Optimized_errout => Integer_Output_RS_Decoder_HDL_Optimized_out5
              );

  startOut <= Integer_Output_RS_Decoder_HDL_Optimized_out2;

  endOut <= Integer_Output_RS_Decoder_HDL_Optimized_out3;

  validOut <= Integer_Output_RS_Decoder_HDL_Optimized_out4;

  errOut <= Integer_Output_RS_Decoder_HDL_Optimized_out5;

  ce_out <= clk_enable;

  dataOut <= Integer_Output_RS_Decoder_HDL_Optimized_out1;

END rtl;

